"""
Verificador del Sistema Aria
Verifica que todos los m√≥dulos est√©n correctamente instalados y funcionando
"""

import sys
import importlib
from pathlib import Path

def verificar_modulos():
    """Verifica todos los m√≥dulos del sistema"""
    modulos_requeridos = [
        'Habilidades.Voz',
        'Habilidades.Vision', 
        'Habilidades.Simulacion',
        'Habilidades.Procesamiento',
        'Habilidades.Conexiones',
        'Habilidades.Almacenamiento',
        'Habilidades.AutoMODIFICACION',
        'Habilidades.ArquitectoIA',
        'Habilidades.GeneradorDocumentos',
        'Habilidades.ExtensionCAMPO',
        'Habilidades.ComunicacionMulticanal'
    ]
    
    resultados = {}
    
    for modulo in modulos_requeridos:
        try:
            importlib.import_module(modulo)
            resultados[modulo] = "‚úÖ OK"
        except ImportError as e:
            resultados[modulo] = f"‚ùå Error: {e}"
        except Exception as e:
            resultados[modulo] = f"‚ö†Ô∏è Advertencia: {e}"
    
    return resultados

def generar_reporte():
    """Genera un reporte completo del sistema"""
    print("üîç Verificando Sistema Aria...")
    print("=" * 50)
    
    resultados = verificar_modulos()
    
    for modulo, estado in resultados.items():
        print(f"{modulo}: {estado}")
    
    # Contar errores
    errores = sum(1 for estado in resultados.values() if "‚ùå" in estado)
    advertencias = sum(1 for estado in resultados.values() if "‚ö†Ô∏è" in estado)
    exitosos = sum(1 for estado in resultados.values() if "‚úÖ" in estado)
    
    print("=" * 50)
    print(f"üìä Resumen:")
    print(f"‚úÖ M√≥dulos exitosos: {exitosos}")
    print(f"‚ö†Ô∏è Advertencias: {advertencias}")
    print(f"‚ùå Errores: {errores}")
    
    if errores == 0:
        print("üéâ Sistema Aria completamente funcional!")
    else:
        print("üîß Sistema requiere correcciones")
    
    return errores == 0

if __name__ == "__main__":
    generar_reporte()